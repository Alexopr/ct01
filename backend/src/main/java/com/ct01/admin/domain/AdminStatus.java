package com.ct01.admin.domain;

import lombok.Getter;

/**
 * AdminStatus - Enum –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 * 
 * –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
@Getter
public enum AdminStatus {
    
    // –û–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    PENDING("Pending", "–û–∂–∏–¥–∞–µ—Ç", "–û–ø–µ—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"),
    
    // –í –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    EXECUTING("Executing", "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è", "–û–ø–µ—Ä–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"),
    
    // –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    COMPLETED("Completed", "–ó–∞–≤–µ—Ä—à–µ–Ω–∞", "–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"),
    
    // –û—Ç–∫–ª–æ–Ω–µ–Ω–∞
    REJECTED("Rejected", "–û—Ç–∫–ª–æ–Ω–µ–Ω–∞", "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —Å–∏—Å—Ç–µ–º–æ–π"),
    
    // –ü—Ä–æ–≤–∞–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏
    FAILED("Failed", "–ü—Ä–æ–≤–∞–ª–µ–Ω–∞", "–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã");
    
    private final String displayName;
    private final String russianName;
    private final String description;
    
    AdminStatus(String displayName, String russianName, String description) {
        this.displayName = displayName;
        this.russianName = russianName;
        this.description = description;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–º (–æ–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
     */
    public boolean isFinal() {
        return this == COMPLETED || this == REJECTED || this == FAILED;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω—ã–º
     */
    public boolean isSuccessful() {
        return this == COMPLETED;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã–º (–æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è)
     */
    public boolean isActive() {
        return this == EXECUTING;
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–µ—Ç –ª–∏ —Å—Ç–∞—Ç—É—Å –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π
     */
    public boolean canTransitionTo(AdminStatus newStatus) {
        return switch (this) {
            case PENDING -> newStatus == EXECUTING || newStatus == REJECTED;
            case EXECUTING -> newStatus == COMPLETED || newStatus == FAILED;
            case COMPLETED, REJECTED, FAILED -> false; // –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –Ω–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã
     */
    public AdminStatus[] getPossibleNextStatuses() {
        return switch (this) {
            case PENDING -> new AdminStatus[]{EXECUTING, REJECTED};
            case EXECUTING -> new AdminStatus[]{COMPLETED, FAILED};
            case COMPLETED, REJECTED, FAILED -> new AdminStatus[]{};
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
     */
    public int getPriority() {
        return switch (this) {
            case EXECUTING -> 1;    // –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ - –≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            case PENDING -> 2;      // –û–∂–∏–¥–∞—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            case FAILED -> 3;       // –ü—Ä–æ–≤–∞–ª–∏–≤—à–∏–µ—Å—è –æ–ø–µ—Ä–∞—Ü–∏–∏
            case REJECTED -> 4;     // –û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            case COMPLETED -> 5;    // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ - –Ω–∏–∑—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å CSS –∫–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
     */
    public String getCssClass() {
        return switch (this) {
            case PENDING -> "status-pending";
            case EXECUTING -> "status-executing";
            case COMPLETED -> "status-completed";
            case REJECTED -> "status-rejected";
            case FAILED -> "status-failed";
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
     */
    public String getIcon() {
        return switch (this) {
            case PENDING -> "‚è≥";
            case EXECUTING -> "‚ö°";
            case COMPLETED -> "‚úÖ";
            case REJECTED -> "‚ùå";
            case FAILED -> "üí•";
        };
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (case-insensitive)
     */
    public static AdminStatus fromName(String name) {
        for (AdminStatus status : values()) {
            if (status.name().equalsIgnoreCase(name) ||
                status.getDisplayName().equalsIgnoreCase(name) ||
                status.getRussianName().equalsIgnoreCase(name)) {
                return status;
            }
        }
        throw new AdminException("Unknown admin status: " + name);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã (–Ω–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ)
     */
    public static AdminStatus[] getActiveStatuses() {
        return new AdminStatus[]{PENDING, EXECUTING};
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
     */
    public static AdminStatus[] getFinalStatuses() {
        return new AdminStatus[]{COMPLETED, REJECTED, FAILED};
    }
}
